{"version":3,"sources":["../../src/middleware/conektaManager.js"],"names":["cprvKey","conektaPrivateKey","cpubKey","conektaPublicKey","cnktExecute","methodName","data","createCNKTClient","console","log","updateCNKTClient","processPayment","addCardToExistingClient","api_key","newCardObject","JSON","parse","Customer","find","customerCnktID","err","customer","createPaymentSource","type","token_id","cardToken","res","clientObject","create","name","email","phone","corporate","payment_sources","token","shipping_contacts","phone2","receiver","between_streets","streets","address","street1","street2","address2","city","state","country","postal_code","zip","residential","object","_json","id","update","paymentObject","Order","customerID","product","price","quantity","order","module","exports"],"mappings":"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","file":"conektaManager.js","sourcesContent":["import conekta from 'conekta';\nimport config from '../config';\n//var conekta = require('conekta');\n\nlet cprvKey = config.conektaPrivateKey;\nlet cpubKey = config.conektaPublicKey;\n\n//console.log(cKey);\n\nfunction cnktExecute(methodName,data){\n\n  switch (methodName) {\n    case 'clienteNuevo':\n      createCNKTClient(data);\n      console.log('neee');\n      break;\n    case 'actualizarCliente':\n      updateCNKTClient(data);\n      break;\n    case 'processPayment':\n      processPayment(data);\n      break;\n    case 'addCardToClient':\n      addCardToExistingClient(data);\n      break;\n    default:\n      console.log('puto');\n\n  }\n};\n\nfunction addCardToExistingClient(data){\n  conekta.api_key = cpubKey\n\n  var newCardObject = JSON.parse(data);\n\n  conekta.Customer.find(newCardObject.customerCnktID, function(err, customer){\n    customer.createPaymentSource({\n      type:\"card\",\n      token_id: newCardObject.cardToken\n    }, function (err, res){\n      console.log(res);\n    });\n  });\n};\nfunction createCNKTClient(data){\n  conekta.api_key = cpubKey\n  var clientObject = data;//JSON.parse(data);\n\n  conekta.Customer.create({\n    name: clientObject.name,\n    email: clientObject.email,\n    phone: clientObject.phone,\n    //plan_id: 'gold-plan',\n    corporate: true,\n    payment_sources: [{\n      token_id: clientObject.token, //cardToken\n      type: 'card'\n    }],\n    shipping_contacts: [{\n      phone: clientObject.phone2,\n      receiver: clientObject.name,\n      between_streets: clientObject.streets,\n      address: {\n        street1: clientObject.address,\n        street2: clientObject.address2,\n        city: clientObject.city,\n        state: clientObject.state,\n        country: \"MX\",\n        postal_code: clientObject.zip,\n        residential: true\n      }\n    }]\n}, function(err, customer) {\n  if(err){\n      console.log(err.object + ' mostly the token has been used before');\n  }else{\n    console.log(customer._json.id + ' ' + customer._json.email);\n  }\n});\n\n  console.log(clientObject.name);\n};\n\nfunction updateCNKTClient(data){\n  conekta.api_key = cpubKey\n  var clientObject = JSON.parse(data);\n  conekta.Customer.find('custToken', function(err, customer) {\n  customer.update({\n    name: clientObject.name,\n    email: clientObject.email,\n    payment_sources: {\n      token_id:clientObject.token,\n      type:\"card\"\n    }\n  }, function(err, res) {\n    console.log(res);\n  });\n});\n};\n\nfunction processPayment(data){\n  conekta.api_key = cpubKey\n  var paymentObject = JSON.parse(data);\n\n  conekta.Order.create({\n    \"currency\":\"MXN\",\n    \"customer_info\":{\n      \"customer_id\": paymentObject.customerID\n    },\n    \"shipping_contact\":{\n      \"address\": {\n        \"street1\": \"Calle 123, int 2\",\n        \"postal_code\": \"06100\",\n        \"country\": \"MX\"\n      }\n    },\n    \"line_items\":[{\n      \"name\": paymentObject.product,\n      \"unitPrice\": paymentObject.price,\n      \"quantity\": paymentObject.quantity\n    }],\n    \"line_items\": [{\n      \"name\": \"Tacos\",\n      \"unit_price\": 1000,\n      \"quantity\": 12\n  }],\n    \"shipping_lines\": [{\n      \"amount\": 1500,\n      \"carrier\": \"FEDEX\"\n  }],\n    \"charges\":[{\n      \"payment_method\":{\n        \"type\":\"card\",\n        \"payment_source_id\": paymentObject.cardToken\n      }\n    }]\n  }, function(err, order){\n    console.log(order);\n    if(err){\n      console.log(err);\n    }\n  });\n\n};\n\nmodule.exports = {\n  cnktExecute\n}\n"]}